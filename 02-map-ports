#!/bin/dash

VERSION=${1:-1.14}
docker container rm -f myAPIserver

clear
echo \$VERSION is  $VERSION
set -v


# Simple example of a Docker server application

# Test a Go API server running in a Docker container

# Go API code is adapted from https://github.com/HakaseLabs/source-blog/blob/master/rest-api/main.go

# The image is already build for use. See https://hub.docker.com/repository/docker/dockerfornovices/api-server

# Run with

# `docker container run --publish 8089:8000 --rm --detach --name myAPIserver dockerfornovices/api-server:$VERSION`

# Test with `curl -v http://0.0.0.0:9089/people`

#Get Health check status with `docker container inspect --format '{{.State.Health.Status}}' <ID>"

docker container run --publish 8089:8000 --rm --detach --name myAPIserver dockerfornovices/api-server:$VERSION

sleep 5

docker container ls -a

read x

curl http://0.0.0.0:8089/people

# Now what happens we don't publish ports?
read x

docker container stop myAPIserver

docker container run  --rm --detach --name myAPIserver dockerfornovices/api-server:$VERSION

sleep 2

docker container ls -a

curl http://0.0.0.0:8089/people

# No published port means we can't speak to network services inside the container
read x

docker container stop myAPIserver
